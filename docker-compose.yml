version: '3.8'

services:
  mainserver:
    build:
      context: ./mainserver
      dockerfile: Dockerfile
    container_name: main_server-container
    ports:
      - "3000:3000"
    environment:
      - KAFKA_BROKER=kafka:9092
      - DATABASE_URL=postgres://user:password@postgres:5432/mydb
      - PORT=3000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./mainserver:/app

  # notification:
  #   build:
  #     context: ./notification
  #     dockerfile: Dockerfile
  #   container_name: notification-container
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - KAFKA_BROKER=kafka:9092
  #     - DATABASE_URL=postgres://user:password@postgres:5432/mydb
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-container
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-container
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000

  postgres:
    image: postgres:15
    container_name: postgres-container
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
  postgres_data:
